package com.salestock.didik.model;

// Generated Nov 3, 2017 5:45:10 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * ProductDetail generated by hbm2java
 */
@Entity
@Table(name = "product_detail")
public class ProductDetail implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private String id;
	@JsonIgnore
	private Product product;
	private String color;
	private String size;
	private Integer stock;
	@JsonIgnore
	private Set<ShoppingCart> shoppingCarts = new HashSet<ShoppingCart>(0);

	public ProductDetail() {
	}

	public ProductDetail(String id) {
		this.id = id;
	}

	public ProductDetail(String id, Product product, String color, String size,
			Integer stock, Set<ShoppingCart> shoppingCarts) {
		this.id = id;
		this.product = product;
		this.color = color;
		this.size = size;
		this.stock = stock;
		this.shoppingCarts = shoppingCarts;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, length = 100)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id")
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@Column(name = "color", length = 20)
	public String getColor() {
		return this.color;
	}

	public void setColor(String color) {
		this.color = color;
	}

	@Column(name = "size", length = 20)
	public String getSize() {
		return this.size;
	}

	public void setSize(String size) {
		this.size = size;
	}

	@Column(name = "stock")
	public Integer getStock() {
		return this.stock;
	}

	public void setStock(Integer stock) {
		this.stock = stock;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productDetail")
	public Set<ShoppingCart> getShoppingCarts() {
		return this.shoppingCarts;
	}

	public void setShoppingCarts(Set<ShoppingCart> shoppingCarts) {
		this.shoppingCarts = shoppingCarts;
	}

}
